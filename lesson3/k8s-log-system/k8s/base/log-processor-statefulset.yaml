apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: log-processor
  namespace: log-system
  labels:
    app: log-processor
spec:
  serviceName: log-processor-headless
  replicas: 3
  selector:
    matchLabels:
      app: log-processor
  template:
    metadata:
      labels:
        app: log-processor
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: log-processor
      terminationGracePeriodSeconds: 30
      containers:
      - name: processor
        image: log-processor:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: url
        - name: REDIS_URL
          value: "redis://redis:6379"
        - name: BATCH_SIZE
          value: "100"
        - name: FLUSH_INTERVAL
          value: "5"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: buffer-storage
          mountPath: /app/buffer
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
  volumeClaimTemplates:
  - metadata:
      name: buffer-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: log-processor
  namespace: log-system
  labels:
    app: log-processor
spec:
  type: ClusterIP
  selector:
    app: log-processor
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
---
apiVersion: v1
kind: Service
metadata:
  name: log-processor-headless
  namespace: log-system
spec:
  clusterIP: None
  selector:
    app: log-processor
  ports:
  - port: 8080
    targetPort: 8080
    name: http
